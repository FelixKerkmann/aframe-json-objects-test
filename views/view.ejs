<!DOCTYPE html>
<html>
<head>
    <script src="https://aframe.io/releases/1.3.0/aframe.min.js"></script>
    <script src="../public/js/backsideFixing.js"></script>
    <script src="../public/components/input-listen.js"></script>
    <script src="/public/components/selectable.js"></script>
    <script type="importmap">
      {
      "imports": {
       "three": "https://cdn.skypack.dev/three@0.139.2/build/three.module",
          "three/": "https://cdn.skypack.dev/three@0.139.2/"
      }
     }
    </script>
    <script src="/public/components/objectSelectorComponent.js" type="module"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script src="/public/js/showroom-client.js"></script>
    <script src="/public/js/objectSelectorController.js"></script>
    <link rel="stylesheet" type="text/css" href="../public/css/milligram.min.css">
    <link rel="stylesheet" type="text/css" href="../public/css/style.css">
    <link rel="icon" type="image/png" href="../public/resources/favicon.png">
</head>
<body>

<!-- Scene view -->
<div id="sceneView" class="wide" >
    <a-scene shadow="type: pcfsoft" cursor="rayOrigin: mouse" vr-mode-ui="enterVRButton: #myEnterVRButton">
        <a-assets>
            <img id="hall" src="../public/resources/skyboxes/hall.jpg">
            <img id="architecture" src="../public/resources/skyboxes/architecture.jpg">
            <img id="room-parkett" src="../public/resources/skyboxes/room_parkett.jpg">
            <img id="room-white-wood" src="../public/resources/skyboxes/room_white_wood.jpg">
            <img id="track" src="../public/resources/skyboxes/track.jpg">
            <img id="alaskaSkybox" src="../public/resources/skyboxes/alaska.jpg">
            <img id="lakeSkybox" src="../public/resources/skyboxes/lake.jpeg">
            <a-asset-item id="roomModel" src="../public/resources/uploads/rooms/DemoRaumDiffuseOnlyCompressed.glb"></a-asset-item>
            <%- assets %>
        </a-assets>

        <a-sky id="skybox" src="#alaskaSkybox"></a-sky>


        <a-entity id="cameraRig" position="0 1.6 0">
            <a-entity id="player"
                  camera
                  wasd-controls
                  look-controls>
                </a-entity>
        </a-entity>

        <a-entity id="ObjectSelector"></a-entity>

        <a-entity id="ambientLight"
                  light="type: ambient; color: #FFFFFF; intensity: 0.6;">

        </a-entity>

        <a-entity id="pointLight"
                  light="type: point; color: #FFFFFF; intensity: 0.6; castShadow:true; shadowMapHeight: 1024; shadowMapWidth:1024;"
                  position="0 2.5 0"
        ></a-entity>

        <a-entity id="Room"
                  gltf-model=#roomModel
                  position="0 0 0"
                  rotation="0 0 0"
                  scale="1 1 1"
                  shadow="receive:true">
        </a-entity>

        <%- entities %>

        <a id="myEnterVRButton" href="#">
            <div class="a-enter-vr">
                <button class="enter-vr-button" title="Fullscreen">
                    Fullscreen
                </button>
            </div>
        </a>

    </a-scene>
</div>

<!-- TODO: Styling, Visibility Problem with Outer and Inner Elements -->
<!-- Right panel -->
<div class="gizmo-mode">
    <a onclick="changeSelection('translation')">Pos</a>
    <a onclick="changeSelection('rotation')">Rot</a>
    <a onclick="changeSelection('scale')">Scale</a>
</div>
<div id="rightPanel" class="">
    <div class="navbar">
        <a class="active" id="nav-modelView" onclick="toggleNavbar('nav-modelView')">Selected</a>
        <a class="" id="nav-models" onclick="toggleNavbar('nav-models')">Models</a>
        <a class="" id="nav-inventory" onclick="toggleNavbar('nav-inventory')">Inventory</a>
    </div>
    <div id="modelView">
        <p id="objectName" class="attributeTitle"><i>No object selected</i></p>
        <p class="attributeTitle clickable" onclick="changeSelection('translation')">Position (key t)</p>
        <label for="positionX">X</label>
        <input class="inputNumber" type="number" id="positionX" name="positionX" step="0.05"
               onfocusin="storeOldValue(this.id)"
               onchange="emitOnValuesChange(this.id)"
               onfocusout="emitOnValueSubmit(this.id)">
        <br>
        <label for="positionY">Y</label>
        <input class="inputNumber" type="number" id="positionY" name="positionY" step="0.05"
               onfocusin="storeOldValue(this.id)"
               onchange="emitOnValuesChange(this.id)"
               onfocusout="emitOnValueSubmit(this.id)">
        <br>
        <label for="positionZ">Z</label>
        <input class="inputNumber" type="number" id="positionZ" name="positionZ" step="0.05"
               onfocusin="storeOldValue(this.id)"
               onchange="emitOnValuesChange(this.id)"
               onfocusout="emitOnValueSubmit(this.id)">
        <br>

        <p class="attributeTitle clickable" onclick="changeSelection('rotation')">Rotation (key r)</p>
        <label for="rotationX">X</label>
        <input class="inputNumber" type="number" id="rotationX" name="rotationX" step="1"
               onfocusin="storeOldValue(this.id)"
               onchange="emitOnValuesChange(this.id)"
               onfocusout="emitOnValueSubmit(this.id)">
        <br>
        <label for="rotationY">Y</label>
        <input class="inputNumber" type="number" id="rotationY" name="rotationY" step="1"
               onfocusin="storeOldValue(this.id)"
               onchange="emitOnValuesChange(this.id)"
               onfocusout="emitOnValueSubmit(this.id)">
        <br>
        <label for="rotationZ">Z</label>
        <input class="inputNumber" type="number" id="rotationZ" name="rotationZ" step="1"
               onfocusin="storeOldValue(this.id)"
               onchange="emitOnValuesChange(this.id)"
               onfocusout="emitOnValueSubmit(this.id)">
        <br>
        <p class="attributeTitle clickable" onclick="changeSelection('scale')">Scale (key e)</p>
        <label for="scale">X, Y, Z</label>
        <input class="inputNumber" type="number" id="scale" name="scale" step="0.25"
               onfocusin="storeOldValue(this.id)"
               onchange="emitOnValuesChange(this.id)"
               onfocusout="emitOnValueSubmit(this.id)">
        <br>
        <input type="hidden" id="useremail" name="useremail" value="<%- useremail %>"/>
        <input type="hidden" id="showroomid" name="showroomid" value="<%- showroomid %>"/>
        </br>
        <button class="btn btn-cancel" type="submit" onclick="emitRemoveObject()">Remove Object</button>
    </div>
    <div id="models" style="visibility: hidden; height: 0px;">
        <h3>Models</h3>
        <%- models %>
    </div>
    <div id="inventory" style="visibility: hidden; height: 0px;">
            <h3>Inventory</h3>
            <%- inventory %>
            <button class="" onclick="function toggleUpdateForm() {
                        if(document.getElementById('upload-model').style.display === 'block') {
                            document.getElementById('upload-model').style.display = 'none';
                        } else {
                            document.getElementById('upload-model').style.display = 'block';
                        }
                    }
                    toggleUpdateForm()">Upload 3D-Modell</button>
            <div id="upload-model">
                <form action="/upload" class="" method="post" enctype="multipart/form-data">
                    <label>.glb - file</label>
                    <input type="file" id="gltffile" name="gltffile" accept=".glb, model/gltf-binary" required>
                    <br>
                    <br>
                    <button type="submit" class="btn-accept">Upload</button>
                    <button type="button" class="btn-cancel" onclick="function closeUpdateForm() {
                            document.getElementById('upload-model').style.display = 'none';
                        }
                        closeUpdateForm()">Cancel</button>
                </form>
            </div>
    </div>
    <div class="bottom-menu">
        <a href="../public/resources/keyboard_illustration_lila.png" target="_blank">Keyboard Shortcuts</a>
        <hr>
        <a class="button button-clear" href="/vr/<%- showroomid %>"> VR - Mode</a><br>
        <a class="button button-clear" href="/showrooms"> Back to Showrooms</a><br>
        <a class="button button-clear" href="/logout"> Logout</a>
    </div>
</div>

<button id="addElementButton" onclick="toggleAddNewObject()">+</button>

<div id="popup">
    <div class="popup-content">
        <form action="/showroom/<%- showroomid %>/edit" class="form-container" method="post" enctype="application/json">
            <h3>Add 3D Model</h3>
            <label>3D Model:</label>
            <select name="files" id="files">
                <%- selection %>
            </select>
            <br>
            <label>Name:</label>
            <br>
            <input type="text" id="name" name="name" required>
            <br>
            <button type="submit" class="btn btn-accept">Add</button>
            <button class="btn btn-cancel float-right" onclick="toggleAddNewObject()">Cancel</button>
        </form>
    </div>
</div>
<script>
    window.onload = () => {
        initialiseObjectSelection();
        setAllBackfaces();
        setEventListenerOnModelList();

        window.addEventListener("keyup", function (event) {
            if (event.key === DESELECT_KEY) {
                const addModelhtmlElement = document.getElementById("popup");
                addModelhtmlElement.style.visibility = 'hidden';
            }
        });
    }

    function toggleNavbar(elem) {
        let arr = ['nav-modelView', 'nav-inventory', 'nav-models']
        arr.forEach((o => {
            if(elem === o) {
                let selected = document.getElementById(o)
                selected.className = 'active'
                selected = document.getElementById(o.substring(4))
                selected.style.visibility = 'visible'
                selected.style.height = 'auto'

            } else {
                let deselected = document.getElementById(o)
                deselected.className = ''
                deselected = document.getElementById(o.substring(4))
                deselected.style.visibility = 'hidden'
                deselected.style.height = '0px'

            }
        }))
    }

    const addModelId = 'popup';
    function toggleAddNewObject() {
        const addModelhtmlElement = document.getElementById(addModelId);
        if(addModelhtmlElement.style.visibility === 'visible'){
            addModelhtmlElement.style.visibility = 'hidden';
        }else{
            addModelhtmlElement.style.visibility = 'visible';
        }
    }

</script>
</body>
</html>

